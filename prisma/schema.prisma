// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
    ADMIN
    TEACHER
    STUDENT
    PARENT
}

enum TeacherStatus {
    PENDING
}

model User {
    id String @id @db.Uuid @default(uuid())
    referId String @db.Text
    firstName String? @db.Text
    lastName String? @db.Text
    email String @db.Text
    phoneNumber String? @db.Text
    identifyCard String? @db.Text
    imageUrl String? @db.Text
    role UserRole?

    admin Admin?
    teacher Teacher?
    parent Parent?
    student Student?

    createdAt DateTime @default(now())
    updatedAt DateTime?
}

model Teacher {
    id String @id @db.Uuid @default(uuid())
    user User @relation(fields: [userId], references: [id])
    userId String @db.Uuid @unique
    status TeacherStatus
    baseSalary Int @db.Integer
    acceptedAt DateTime?
}

model Admin {
    id String @id @db.Uuid @default(uuid())
    user User @relation(fields: [userId], references: [id])
    userId String @db.Uuid @unique
}

model Parent {
    id String @id @db.Uuid @default(uuid())
    user User @relation(fields: [userId], references: [id])
    userId String @db.Uuid @unique
    discount Int @db.Integer

    children ChildrenParents[]
}

model Student {
    id String @id @db.Uuid @default(uuid())
    user User @relation(fields: [userId], references: [id])
    userId String @db.Uuid @unique

    parents ChildrenParents[]
}

model ChildrenParents {
    child Student @relation(fields: [childId], references: [id])
    childId String @db.Uuid
    parent Parent @relation(fields: [parentId], references: [id])
    parentId String @db.Uuid
    createdAt DateTime @default(now())

    @@id([childId, parentId])
}
